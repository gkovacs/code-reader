// Generated by LiveScript 1.2.0
(function(){
  var root, express, request, app, dictionary, js_parser, github, stackoverflow, http, httpserver;
  root = typeof exports != 'undefined' && exports !== null ? exports : this;
  express = require('express');
  request = require('request');
  app = express();
  dictionary = require('./dictionary');
  js_parser = require('./js_parser');
  github = require('./github');
  stackoverflow = require('./stackoverflow');
  app.configure(function(){
    return app.use(express['static'](__dirname + '/static'));
  });
  http = require('http');
  httpserver = http.createServer(app);
  httpserver.listen(3456);
  app.get('/searchStackOverflow', function(req, res){
    var params, res$, k, ref$, v;
    res$ = {};
    for (k in ref$ = req.query) {
      v = ref$[k];
      res$[k] = v;
    }
    params = res$;
    return stackoverflow.search(params, function(x){
      return res.send(
      JSON.stringify(
      x));
    });
  });
  app.get('/searchCode', function(req, res){
    var params, res$, k, ref$, v;
    res$ = {};
    for (k in ref$ = req.query) {
      v = ref$[k];
      res$[k] = v;
    }
    params = res$;
    console.log(params);
    return github.searchCode(params.searchTerm, params.lang, function(x){
      return res.send(
      JSON.stringify(
      x));
    });
  });
  app.get('/getRepositories', function(req, res){
    var params, res$, k, ref$, v;
    res$ = {};
    for (k in ref$ = req.query) {
      v = ref$[k];
      res$[k] = v;
    }
    params = res$;
    params.numPages == null && (params.numPages = 10);
    params.numPages = parseInt(params.numPages);
    return github.getRepositories(params.lang, params.numPages, function(x){
      return res.send(
      JSON.stringify(
      x));
    });
  });
  app.get('/getCallExpressions', function(req, res){
    var params, res$, k, ref$, v;
    res$ = {};
    for (k in ref$ = req.query) {
      v = ref$[k];
      res$[k] = v;
    }
    params = res$;
    return res.send(JSON.stringify(js_parser.getCallExpressions(params.phrase)));
  });
  app.get('/getWordFreq', function(req, res){
    var params, res$, k, ref$, v;
    res$ = {};
    for (k in ref$ = req.query) {
      v = ref$[k];
      res$[k] = v;
    }
    params = res$;
    if (params.from == null) {
      params.from = 'en';
    }
    if (params.dest == null) {
      params.dest = 'en';
    }
    return dictionary.getWordFreq(params, function(output){
      return res.send(output.toString());
    });
  });
  app.get('/getDefinitionsRaw', function(req, res){
    var params, res$, k, ref$, v;
    res$ = {};
    for (k in ref$ = req.query) {
      v = ref$[k];
      res$[k] = v;
    }
    params = res$;
    if (params.from == null) {
      params.from = 'en';
    }
    if (params.dest == null) {
      params.dest = 'en';
    }
    return dictionary.getDefinitionsRaw(params, function(output){
      return res.send(output);
    });
  });
  app.get('/getDefinitions', function(req, res){
    var params, res$, k, ref$, v;
    res$ = {};
    for (k in ref$ = req.query) {
      v = ref$[k];
      res$[k] = v;
    }
    params = res$;
    if (params.from == null) {
      params.from = 'en';
    }
    if (params.dest == null) {
      params.dest = 'en';
    }
    return dictionary.getDefinitions(params, function(output){
      return res.send(output);
    });
  });
  app.get('/getExamplesRaw', function(req, res){
    var params, res$, k, ref$, v;
    res$ = {};
    for (k in ref$ = req.query) {
      v = ref$[k];
      res$[k] = v;
    }
    params = res$;
    if (params.from == null) {
      params.from = 'en';
    }
    if (params.dest == null) {
      params.dest = 'en';
    }
    return dictionary.getExamplesRaw(params, function(output){
      return res.send(output);
    });
  });
  app.get('/getExamples', function(req, res){
    var params, res$, k, ref$, v;
    res$ = {};
    for (k in ref$ = req.query) {
      v = ref$[k];
      res$[k] = v;
    }
    params = res$;
    if (params.from == null) {
      params.from = 'en';
    }
    if (params.dest == null) {
      params.dest = 'en';
    }
    return dictionary.getExamples(params, function(output){
      return res.send(output);
    });
  });
}).call(this);
